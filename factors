#!/usr/bin/env python3
import sys


def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True


def factorize_number(n):
    if is_prime(n):
        return [(n, 1)]

    def f(x, n):
        return (x**2 + 1) % n

    def pollards_rho(n):
        if n % 2 == 0:
            return 2
        x = 2
        y = 2
        d = 1
        while d == 1:
            x = f(x, n)
            y = f(f(y, n), n)
            d = gcd(abs(x - y), n)
        return d

    def gcd(a, b):
        while b != 0:
            a, b = b, a % b
        return a

    p = pollards_rho(n)
    q = n // p

    return [(p, q)]


def handle_file(file_n):
    with open(file_n, 'r') as file:
        numbers = file.readlines()

    for number in numbers:
        number = number.strip()
        if not number:
            continue
        number = int(number)
        factorizations = factorize_number(number)
        p, q = factorizations[0]
        print(f"{number}={q}*{p}")


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)

    file_n = sys.argv[1]
    handle_file(file_n)
